// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// schema.prisma
// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Ambientes {
  id_ambiente Int      @id @default(autoincrement())
  nombre_amb  String
  municipio   Int
  sede        Sede
  estado      Estado

  Municipio   Municipios @relation(fields: [municipio], references: [id_municipio])
  Horarios    Horarios[]
}

model Areas {
  id_area    Int      @id @default(autoincrement())
  nombre_area String
  Vinculacion Vinculacion[]
}

model Fichas {
  codigo      Int      @id
  inicio_fecha DateTime
  fin_lectiva DateTime
  fin_ficha   DateTime
  programa    Int
  sede        Sede
  estado      EstadoFicha

  Programas   Programas @relation(fields: [programa], references: [id_programa])
  Horarios    Horarios[]
}

model Horarios {
  id_horario     Int      @id @default(autoincrement())
  fecha_inicio   DateTime
  hora_inicio    String
  fecha_fin      DateTime
  hora_fin       String
  dia            Dia
  cantidad_horas Int
  instructor     Int
  ficha          Int
  ambiente       Int
  estado         EstadoHorario @default(aprobado)
  Fichas       Fichas      @relation(fields: [ficha], references: [codigo])
  Ambientes    Ambientes   @relation(fields: [ambiente], references: [id_ambiente])
  Vinculacion  Vinculacion @relation(fields: [instructor], references: [id_vinculacion])
}

model Municipios {
  id_municipio Int       @id @default(autoincrement())
  nombre_mpio  String
  departamento String

  Ambientes  Ambientes[]
  Personas   Personas[]
}

model Personas {
  id_persona     Int      @id @default(autoincrement())
  identificacion Int      @unique
  nombres        String
  correo         String
  telefono       String
  password       String
  rol            Rol
  cargo          Cargo
  municipio      Int

  Municipios Municipios @relation(fields: [municipio], references: [id_municipio])
  Vinculacion Vinculacion[]
}

model Programas {
  id_programa   Int      @id @default(autoincrement())
  nombre_programa String
  sigla          String
  nivel          Nivel
  estado         Estado

  Fichas Fichas[]
}

model Vinculacion {
  id_vinculacion Int      @id @default(autoincrement())
  instructor     Int      @unique
  tipo           Tipo
  sede           Sede
  area           Int

  Personas Personas @relation(fields: [instructor], references: [id_persona])
  Areas    Areas    @relation(fields: [area], references: [id_area])
  Horarios Horarios[]
}

enum Sede {
  centro
  Yamboro
}

enum Estado {
  activo
  inactivo
}

enum EstadoFicha {
  lectiva
  electiva
  finalizada
}

enum EstadoHorario {
  solicitud
  aprobado  
  noaprobado
}

enum Dia {
  lunes
  martes
  miercoles
  jueves
  viernes
  sabado
  domingo
}

enum Rol {
  Administrador
  Instructor
  Coordinador
  Lider
}

enum Cargo {
  Instructor
  Aprendiz
  Coordinador
}

enum Nivel {
  Tecnico
  Tecnologo
}
enum Tipo {
  contratista
  planta
}
